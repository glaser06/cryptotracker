//
//  ListCoinsRouter.swift
//  CryptoTracker
//
//  Created by Zaizen Kaegyoshi on 8/23/17.
//  Copyright (c) 2017 zaizencorp. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol ListCoinsRoutingLogic
{
  //func routeToSomewhere(segue: UIStoryboardSegue?)
}

protocol ListCoinsDataPassing
{
  var dataStore: ListCoinsDataStore? { get }
}

class ListCoinsRouter: NSObject, ListCoinsRoutingLogic, ListCoinsDataPassing
{
  weak var viewController: ListCoinsViewController?
  var dataStore: ListCoinsDataStore?
  
  // MARK: Routing
  
    func routeToShowCoin(segue: UIStoryboardSegue) {
//        let destinationVC = (segue.destination as! UINavigationController).viewControllers.first as! ShowCoinViewController
        let destinationVC = segue.destination as! ShowCoinViewController
        var destinationDS = destinationVC.router!.dataStore!
        
        passDataToShowCoin(source: dataStore!, destination: &destinationDS, index: viewController!.coinTableView.indexPathForSelectedRow!.row)

    }
    func passDataToShowCoin(source: ListCoinsDataStore, destination: inout ShowCoinDataStore, index: Int)
    {
//        destination.coin = source.coins[index]
        let coin = source.coins[index]
        destination.coin = MarketWorker.sharedInstance.coinCollection[viewController!.selectedSymbol.lowercased()]!
        
    }
    func routeToAddTransaction(segue: UIStoryboardSegue) {
        let destinationVC = (segue.destination as! UINavigationController).viewControllers.first as! AddTransactionViewController
        var destinationDS = destinationVC.router!.dataStore!
        
        passDataToAddTransaction(source: dataStore!, destination: &destinationDS, index: viewController!.coinTableView.indexPathForSelectedRow!.row)
        
    }
    func passDataToAddTransaction(source: ListCoinsDataStore, destination: inout AddTransactionDataStore, index: Int)
    {
        let coin = source.coins[index]
        destination.coin = MarketWorker.sharedInstance.coinCollection[self.viewController!.selectedSymbol]
        destination.transactionType = .Buy
//        destination.exchange = source.coin?.exchanges.first?.value
//        destination.pair = source.coin?.exchanges.first?.value.pairs.first
        
        
    }
//    func navigateToShowCoin(source: ListCoinsViewController, destination: ShowCoinViewController) {
//        destination.hidesBottomBarWhenPushed = true
//    }
  //func routeToSomewhere(segue: UIStoryboardSegue?)
  //{
  //  if let segue = segue {
  //    let destinationVC = segue.destination as! SomewhereViewController
  //    var destinationDS = destinationVC.router!.dataStore!
  //    passDataToSomewhere(source: dataStore!, destination: &destinationDS)
  //  } else {
  //    let storyboard = UIStoryboard(name: "Main", bundle: nil)
  //    let destinationVC = storyboard.instantiateViewController(withIdentifier: "SomewhereViewController") as! SomewhereViewController
  //    var destinationDS = destinationVC.router!.dataStore!
  //    passDataToSomewhere(source: dataStore!, destination: &destinationDS)
  //    navigateToSomewhere(source: viewController!, destination: destinationVC)
  //  }
  //}

  // MARK: Navigation
  
  //func navigateToSomewhere(source: ListCoinsViewController, destination: SomewhereViewController)
  //{
  //  source.show(destination, sender: nil)
  //}
  
  // MARK: Passing data
  
  //func passDataToSomewhere(source: ListCoinsDataStore, destination: inout SomewhereDataStore)
  //{
  //  destination.name = source.name
  //}
}
