//
//  PortfolioWorker.swift
//  CryptoTracker
//
//  Created by Zaizen Kaegyoshi on 8/25/17.
//  Copyright (c) 2017 zaizencorp. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class PortfolioWorker
{
    static let sharedInstance = PortfolioWorker()
    
    var portfolio: Portfolio = Portfolio()
    
    func addTransaction(pair: Pair, price: Double, amount: Double, isBuy: Bool) {
        var type: Transaction.OrderType = .Buy
        if !isBuy {
            type = .Sell
        }
        let transaction = Transaction(pair: pair, price: price, amount: amount, type: type)
        
        let base = pair.base
        var found = false
        for each in self.portfolio.assets {
            if each.coin.symbol == base.symbol {
                
                each.addTransaction(transaction: transaction)
                
                return
            }
        }
        if !found {
            let asset = Asset(coin: base)
            asset.addTransaction(transaction: transaction)
            self.portfolio.assets.append(asset)
        }
        
    }
    
    func updateAssetPrices() {
        for asset in self.portfolio.assets {
            asset.currentPrice = 1.0
        }
    }
    
    func totalValue() -> Double {
        var sum = 0.0
        for asset in self.portfolio.assets {
            sum += asset.amountHeld * asset.coin.exchanges["CoinMarketCap"]!.pairs.first!.price!
        }
        return sum
    }
    
}
