//
//  ShowCoinPresenter.swift
//  CryptoTracker
//
//  Created by Zaizen Kaegyoshi on 8/25/17.
//  Copyright (c) 2017 zaizencorp. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ShowCoinPresentationLogic
{
    func presentCoin(response: ShowCoin.ShowCoin.Response)
    func presentExchangesAndPair(response: ShowCoin.FetchExchangesAndPair.Response)
    func presentHoldings(response: ShowCoin.FetchHoldings.Response)
}

class ShowCoinPresenter: ShowCoinPresentationLogic
{
    weak var viewController: ShowCoinDisplayLogic?
    
    // MARK: Do something
    
    func presentCoin(response: ShowCoin.ShowCoin.Response) {
        
        var cap = String(describing: response.volume!)
        
        let length = cap.characters.count
        var index = cap.index(cap.startIndex, offsetBy: 3)
        cap = cap.substring(to: index)
        if length > 11 {
            let decimalPlace = length - 11
            if decimalPlace < 3 {
                index = cap.index(cap.startIndex, offsetBy: decimalPlace)
                cap.insert(".", at: index)
            }
            
            cap = "$\(cap)B"
        } else if length > 8 {
            let decimalPlace = length - 8
            if decimalPlace < 3 {
                index = cap.index(cap.startIndex, offsetBy: decimalPlace)
                cap.insert(".", at: index)
            }
            
            cap = "$\(cap)M"
        }
        
        let changeValue = response.price! - response.price!/(1+response.percent!/100)
        let formattedChange = String(format: "%.2f", changeValue)
        let formattedPercent = String(format: "%.2f", response.percent!)
        let didIncrease = (response.percent! >= 0)
        let formattedPrice: String
        if response.quote == "usd" {
            formattedPrice = "\(response.price!)"
        } else {
            formattedPrice = String(format: "%.5f", response.price!)
        }
        
        let vm = ShowCoin.ShowCoin.ViewModel(price: formattedPrice, percent: "\(formattedChange) (\(formattedPercent)%)", volume: "\(cap)", name: response.name, symbol: response.symbol, didIncrease: didIncrease, quote: response.quote.uppercased())
        viewController?.displayCoin(viewModel: vm)
    }
    func presentExchangesAndPair(response: ShowCoin.FetchExchangesAndPair.Response) {
        let vm = ShowCoin.FetchExchangesAndPair.ViewModel(exchangeName: response.exchangeName.capitalized, quote: response.quote.uppercased(), quotes: response.quotes)
        viewController?.displayExchanges(viewModel: vm)
    }
    func presentHoldings(response: ShowCoin.FetchHoldings.Response) {
        if !response.exists {
            let vm = ShowCoin.FetchHoldings.ViewModel(marketValue: "", initialValue: "", amount: "", totalGain: "", exists: false)
            self.viewController?.displayHoldings(viewModel: vm)
            return
        }
        let marketValue = String(format: "%.2f", response.marketValue)
        let initValue = String(format: "%.2f", response.initialValue)
        let amount = "\(response.amount)"
        let gain = String(format: "$%.2f", response.totalGain)
        let percentage = String(format: "%.2f", response.totalGain/response.initialValue) + "%"
        let vm = ShowCoin.FetchHoldings.ViewModel(marketValue: marketValue, initialValue: initValue, amount: amount, totalGain: "\(gain) (\(percentage))", exists: true)
        self.viewController?.displayHoldings(viewModel: vm)
    }
}










