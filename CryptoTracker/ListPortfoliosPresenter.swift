//
//  ListPortfoliosPresenter.swift
//  CryptoTracker
//
//  Created by Zaizen Kaegyoshi on 10/29/17.
//  Copyright (c) 2017 zaizencorp. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListPortfoliosPresentationLogic
{
    func presentPortfolios(response: ListPortfolios.FetchPortfolios.Response)
}

class ListPortfoliosPresenter: ListPortfoliosPresentationLogic
{
    weak var viewController: ListPortfoliosDisplayLogic?
    
    // MARK: Do something
    
    func presentPortfolios(response: ListPortfolios.FetchPortfolios.Response) {
//        for portfolio in response.portfolios {
//
//        }
        
        let portfolios: [ListPortfolios.FetchPortfolios.ViewModel.DisplayablePortfolio] = response.portfolios.map { (p) -> ListPortfolios.FetchPortfolios.ViewModel.DisplayablePortfolio in
            let assets = p.assets.filter("amountHeld > %@", 0.00000001)
            
            return ListPortfolios.FetchPortfolios.ViewModel.DisplayablePortfolio(name: p.name, assetNames: assets.map({ (a) -> String in
//                print(a.amountHeld)
                return a.coin!.symbol
            }), assetPercents: assets.map({ (a) -> Double in
//                print(a.coin)
                if let price = (a.coin?.defaultPair?.price.value) {
                    return a.amountHeld * price / p.marketValue
                } else {
                    return a.amountHeld / p.marketValue
                    
                }
                
                
            }), assetValue: "\(p.marketValue)", assetChartData: [], assetChange: 0.0)
        }
        let vm = ListPortfolios.FetchPortfolios.ViewModel(portfolios: portfolios)
        viewController?.displayPortfolios(viewModel: vm)
    }
}
