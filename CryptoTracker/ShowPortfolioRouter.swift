//
//  ShowPortfolioRouter.swift
//  CryptoTracker
//
//  Created by Zaizen Kaegyoshi on 8/25/17.
//  Copyright (c) 2017 zaizencorp. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RealmSwift

@objc protocol ShowPortfolioRoutingLogic
{
    func routeToShowCoin(segue: UIStoryboardSegue)
    func routeToShowCoin()
}

protocol ShowPortfolioDataPassing
{
  var dataStore: ShowPortfolioDataStore? { get }
}

class ShowPortfolioRouter: NSObject, ShowPortfolioRoutingLogic, ShowPortfolioDataPassing
{
  weak var viewController: ShowPortfolioViewController?
  var dataStore: ShowPortfolioDataStore?
  
  // MARK: Routing
    
    func routeToAddTransaction(segue: UIStoryboardSegue) {
        let destinationVC = (segue.destination as! UINavigationController).viewControllers.first! as! ListCoinsViewController
        var destinationDS = destinationVC.router!.dataStore!
        passDataToAddTransaction(source: dataStore!, destination: &destinationDS)
    }
    func passDataToAddTransaction(source: ShowPortfolioDataStore, destination: inout ListCoinsDataStore)
    {
        destination.gotoTransaction = false
        destination.doSwitch = false
    }
    func routeToShowCoin(segue: UIStoryboardSegue) {
//        let destinationVC = (segue.destination as! UINavigationController).viewControllers.first! as! ShowCoinViewController
        let destinationVC = segue.destination as! ShowCoinViewController
        var destinationDS = destinationVC.router!.dataStore!
        passDataToShowCoin(source: dataStore!, destination: &destinationDS)
    }
    func routeToShowCoin() {
        let destinationVC: ShowCoinViewController = viewController!.storyboard!.instantiateViewController(withIdentifier: "ShowCoin") as! ShowCoinViewController
        var destinationDS = destinationVC.router!.dataStore!
        passDataToShowCoin(source: dataStore!, destination: &destinationDS)
        viewController?.navigationController?.pushViewController(destinationVC, animated: true)
    }
    
    func passDataToShowCoin(source: ShowPortfolioDataStore, destination: inout ShowCoinDataStore) {
        let index = viewController!.assetTableView.indexPathForSelectedRow!.row
        var assetCoin: String
        var quote: String
        var exchange: String
        if viewController?.selectedAssets == 4 {
            assetCoin = viewController!.watchlist[index].symbol.lowercased()
            quote = (viewController?.watchlist[index].quoteSymbol.lowercased())!
            exchange = (viewController?.watchlist[index].exchange)!
        } else {
            assetCoin = viewController!.assetsOnDisplay[viewController!.assetTableView.indexPathForSelectedRow!.row].symbol.lowercased()
            quote = ""
            exchange = ""
        }
        
        let realm = try! Realm()
        var coin: Coin
        if let c: Coin = PortfolioWorker.sharedInstance.portfolio.find(coin: assetCoin)?.coin! {
            coin = c
        }  else {
            coin = realm.object(ofType: Coin.self, forPrimaryKey: assetCoin)!
        }
        var pair: Pair?
        if quote == "" {
            pair = coin.defaultPair
        } else {
            pair = coin.pair(with: quote, on: exchange)
        }
        
//            PortfolioWorker.sharedInstance.portfolio.assets.filter("coin.symbol = %@", assetCoin).first!.coin!
        destination.coin = coin
        destination.coinSymbol = coin.symbol
        destination.pair = pair
        
        
        
//        destination.coin = MarketWorker.sharedInstance.coinCollection[assetCoin]
//        destination.exchange = coin.defaultExchange
//        destination.pair = coin.defaultPair
    }
  
  //func routeToSomewhere(segue: UIStoryboardSegue?)
  //{
  //  if let segue = segue {
  //    let destinationVC = segue.destination as! SomewhereViewController
  //    var destinationDS = destinationVC.router!.dataStore!
  //    passDataToSomewhere(source: dataStore!, destination: &destinationDS)
  //  } else {
  //    let storyboard = UIStoryboard(name: "Main", bundle: nil)
  //    let destinationVC = storyboard.instantiateViewController(withIdentifier: "SomewhereViewController") as! SomewhereViewController
  //    var destinationDS = destinationVC.router!.dataStore!
  //    passDataToSomewhere(source: dataStore!, destination: &destinationDS)
  //    navigateToSomewhere(source: viewController!, destination: destinationVC)
  //  }
  //}

  // MARK: Navigation
  
  //func navigateToSomewhere(source: ShowPortfolioViewController, destination: SomewhereViewController)
  //{
  //  source.show(destination, sender: nil)
  //}
  
  // MARK: Passing data
  
  //func passDataToSomewhere(source: ShowPortfolioDataStore, destination: inout SomewhereDataStore)
  //{
  //  destination.name = source.name
  //}
}
